{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\JWT\\\\FrontEnd\\\\src\\\\components\\\\Navbar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../store/appContext\";\nimport \"./Navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Navbar = () => {\n  _s();\n\n  const {\n    store\n  } = useContext(Context);\n  const routes = [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Mi Aplicaci\\xF3n JWT \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this), {\n    label: \"Iniciar Sesión\",\n    path: \"/login\",\n    shouldDisplay: !store.isAuth\n  }, {\n    label: \"Registrarse\",\n    path: \"/signup\",\n    shouldDisplay: !store.isAuth\n  }, {\n    label: \"Inicio\",\n    path: \"/\",\n    shouldDisplay: store.isAuth\n  }];\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar-container\",\n    children: routes.map((route, i) => {\n      if (route.shouldDisplay) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: \"navbar-link\",\n          to: route.path,\n          children: route.label\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      } else return null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/JWT/FrontEnd/src/components/Navbar/index.js"],"names":["React","useContext","Link","Context","Navbar","store","routes","label","path","shouldDisplay","isAuth","map","route","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAO,cAAP;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,UAAU,CAACE,OAAD,CAA5B;AACA,QAAMG,MAAM,GAAG,cAEX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFW,EAIb;AACEC,IAAAA,KAAK,EAAE,gBADT;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,aAAa,EAAE,CAACJ,KAAK,CAACK;AAHxB,GAJa,EASb;AACEH,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,aAAa,EAAE,CAACJ,KAAK,CAACK;AAHxB,GATa,EAcb;AACEH,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,IAAI,EAAE,GAFR;AAGEC,IAAAA,aAAa,EAAEJ,KAAK,CAACK;AAHvB,GAda,CAAf;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACGJ,MAAM,CAACK,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,KAAc;AACxB,UAAID,KAAK,CAACH,aAAV,EAAyB;AACvB,4BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,UAAA,EAAE,EAAEG,KAAK,CAACJ,IAAxC;AAAA,oBACGI,KAAK,CAACL;AADT,WAAmDM,CAAnD;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OAND,MAMO,OAAO,IAAP;AACR,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzCM;;GAAMT,M;;KAAAA,M;AA2Cb,eAAeA,MAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../store/appContext\";\nimport \"./Navbar.css\";\n\nexport const Navbar = () => {\n  const { store } = useContext(Context);\n  const routes = [\n    \n      <h1> Mi Aplicación JWT </h1>,\n    \n    {\n      label: \"Iniciar Sesión\",\n      path: \"/login\",\n      shouldDisplay: !store.isAuth,\n    },\n    {\n      label: \"Registrarse\",\n      path: \"/signup\",\n      shouldDisplay: !store.isAuth,\n    },\n    {\n      label: \"Inicio\",\n      path: \"/\",\n      shouldDisplay: store.isAuth,\n    },\n  ];\n\n  return (\n    <nav className=\"navbar-container\">\n      {routes.map((route, i) => {\n        if (route.shouldDisplay) {\n          return (\n            <Link className=\"navbar-link\" to={route.path} key={i}>\n              {route.label}\n            </Link>\n          );\n        } else return null;\n      })}\n      {/* {routes.map((route, i) => (\n        <Link className=\"navbar-link\" to={route.path} key={i}>\n          {route.label}\n        </Link>\n      ))} */}\n    </nav>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}