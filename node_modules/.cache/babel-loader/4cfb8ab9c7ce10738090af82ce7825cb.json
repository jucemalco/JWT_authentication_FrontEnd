{"ast":null,"code":"const getState = _ref => {\n  let {\n    getStore,\n    getActions,\n    setStore\n  } = _ref;\n  return {\n    store: {\n      isAuth: false,\n      user: null,\n      loading: false\n    },\n    actions: {\n      login: (state, navigate) => {\n        fetch(\"http://localhost:5000/login\", {\n          method: \"POST\",\n          body: JSON.stringify(state),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(response => {\n          if (response.success) {\n            setStore({\n              isAuth: true\n            });\n            localStorage.setItem(\"token\", response.access_token);\n            navigate(\"/\");\n          }\n        }).catch(error => console.error(\"Error:\", error));\n      },\n      createUser: (state, navigate) => {\n        fetch(\"http://localhost:5000/signup\", {\n          method: \"POST\",\n          // or 'PUT'\n          body: JSON.stringify(state),\n          // data can be `string` or {object}!\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(res => res.json()).then(response => {\n          if (response.success) {\n            console.log(\"response\", response);\n            setStore({\n              isAuth: true\n            });\n            localStorage.setItem(\"token\", response.access_token);\n            navigate(\"/\");\n          } else {}\n        }).catch(error => console.error(error.msg));\n      },\n      getUser: () => {\n        setStore({\n          loading: true\n        });\n        const token = localStorage.getItem(\"token\");\n        fetch(\"http://localhost:5000/get_profile\", {\n          method: \"GET\",\n          // or 'PUT' // data can be `string` or {object}!\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }).then(res => res.json()).then(response => {\n          console.log(\"response\", response);\n\n          if (response.success) {\n            setStore({\n              user: response.user\n            });\n          }\n\n          setStore({\n            loading: false\n          });\n        }).catch(error => console.error(error.msg));\n      },\n      logout: () => {\n        setStore({\n          isAuth: false,\n          user: null\n        });\n        localStorage.removeItem(\"token\");\n      }\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["C:/Users/HP/Desktop/JWT/FrontEnd/src/store/flux.js"],"names":["getState","getStore","getActions","setStore","store","isAuth","user","loading","actions","login","state","navigate","fetch","method","body","JSON","stringify","headers","then","res","json","response","success","localStorage","setItem","access_token","catch","error","console","createUser","log","msg","getUser","token","getItem","Authorization","logout","removeItem"],"mappings":"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","sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\n  return {\n    store: {\n      isAuth: false,\n      user: null,\n      loading: false,\n    },\n    actions: {\n      login: (state, navigate) => {\n        fetch(\"http://localhost:5000/login\", {\n          method: \"POST\",\n          body: JSON.stringify(state),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((res) => res.json())\n          .then((response) => {\n            if (response.success) {\n              setStore({ isAuth: true });\n              localStorage.setItem(\"token\", response.access_token);\n              navigate(\"/\");\n            }\n          })\n          .catch((error) => console.error(\"Error:\", error));\n      },\n\n      createUser: (state, navigate) => {\n        fetch(\"http://localhost:5000/signup\", {\n          method: \"POST\", // or 'PUT'\n          body: JSON.stringify(state), // data can be `string` or {object}!\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((res) => res.json())\n          .then((response) => {\n            if (response.success) {\n              console.log(\"response\", response);\n              setStore({ isAuth: true });\n              localStorage.setItem(\"token\", response.access_token);\n              navigate(\"/\");\n            } else {\n            }\n          })\n          .catch((error) => console.error(error.msg));\n      },\n      getUser: () => {\n        setStore({ loading: true });\n        const token = localStorage.getItem(\"token\");\n        fetch(\"http://localhost:5000/get_profile\", {\n          method: \"GET\", // or 'PUT' // data can be `string` or {object}!\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        })\n          .then((res) => res.json())\n          .then((response) => {\n            console.log(\"response\", response);\n            if (response.success) {\n              setStore({ user: response.user });\n            }\n            setStore({ loading: false });\n          })\n          .catch((error) => console.error(error.msg));\n      },\n      logout: () => {\n        setStore({ isAuth: false, user: null });\n        localStorage.removeItem(\"token\");\n      },\n    },\n  };\n};\n\nexport default getState;\n"]},"metadata":{},"sourceType":"module"}